class Solution {
public:
    long long countSubarrays(vector<int>& nums, int minK, int maxK) 
    {
        int culprit_idx = -1;
        int min_idx = -1;
        int max_idx = -1;
        long long ans = 0;
        for(int i = 0; i<nums.size();i++)
        {
            if(nums[i] < minK || nums[i] > maxK) culprit_idx = i;

            if(nums[i] == minK) min_idx = i;

            if (nums[i] == maxK) max_idx = i;

            //take the smaller idx why : bcz if we subtract the smaller idx from culprit idx we can get the valid subarray
            int smaller = min(min_idx ,max_idx);

            int temp = smaller - culprit_idx; // temp: number of the subarray can be created 

            ans += (temp <= 0)? 0 : temp;
        }
        return ans;
    }
};
