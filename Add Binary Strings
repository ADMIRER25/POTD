//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function template for C++
class Solution{
public:	
	string addBinary(string A, string B)
	{
	   string ans = "";
	   int mini = min(A.size(),B.size());
	   int sa = A.size()-1,sb = B.size()-1;
	   int c = 0;
	  // cout << mini << endl;
	  // cout << sa << endl;
	  // cout << sb << endl;
	  // cout << A[sa]-'0' << endl;
	   while(mini--)
	   {
	       if((A[sa]-'0') + (B[sb]-'0') + c == 3) 
	       {
	           ans += '1';
	           c = 1;
	          // cout << "yes3"  << endl;
	       }
	       else if((A[sa]-'0') + (B[sb]-'0') + c == 2)
	       {
	           ans += '0';
	           c = 1;
	          // cout << "yes2" << endl;
	       }
	       else 
	       {
	           ans += to_string((A[sa]-'0') + (B[sb]-'0') + c);
	           c = 0;
	          // cout << "yes" << endl;
	           //cout << ans << endl;
	       }
	       sa--,sb--;
	   }
	  // cout << ans << endl;
	   int maxi;
	   if(A.size() > B.size())
	   {
	     maxi = A.size();
	     mini = B.size();
	   }
	   else
	   {
	       maxi = B.size();
	       mini = A.size();
	   }
	   for(int i = maxi - mini -1; i >= 0;i--)
	   {
	       if(A.size() > B.size())
	       {
	           if(A[i] -'0'+c == 2)
	           {
	               ans += '0';
	               c = 1;
	           }
	           else 
	           {
	             ans +=  to_string(A[i] -'0'+c);
	             c = 0; 
	           }
	       }
	       else 
	       {
	           if(B[i] -'0' + c == 2)
	           {
	               ans += '0';
	               c = 1;
	           }
	           else 
	           {
	             ans +=  to_string(B[i] -'0'+c);
	             c = 0;
	           } 
	       }
	   }
	   if(c) ans += to_string(c); // if c is 1 have to append it
	   int idx = -1;
	   for(int i = 0; i < ans.size();i++) if(ans[i] == '1') idx = i;
	   
	   if(idx == -1) return "0";// there is no 1 in the ans
	   
	   int l = 0,r = idx;
	   while(l < r)
	   {
	       swap(ans[l],ans[r]);
	       l++,r--;
	   }
	   string real_ans = "";
	   for(int i = 0; i <= idx;i++) real_ans += ans[i];
	   
	   return real_ans;
	   
	}
};

//{ Driver Code Starts.

int main()
{
	int t; cin >> t;
	while (t--)
	{
		string A, B; cin >> A >> B;
		Solution ob;
		cout << ob.addBinary (A, B);
		cout << "\n";
	}
}

// Contributed By: Pranay Bansal

// } Driver Code Ends
