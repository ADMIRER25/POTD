Time Complexity: O(N) , Space Complexity:O(1) 

With comment so that one can understand

Link of my github: https://github.com/ADMIRER25/POTD

Code:

 void rearrange(long long *arr, int n) 

    { 

        long long key = arr[n-1] + 1,low = 0,high = n-1; 

        for( i = 0; i < n;i++)

        {

            //max is in even idx an min is in odd idx // in one idx we are storing 

            //2 values with the help of one value , x = (x*y+z)/y, z = (x*y+z)%y y is thr key

            //

            if(i%2 == 0)

            {

                arr[i] = (arr[high]%key) * key + arr[i]; // here arr[high]%key is not needed we can just use arr[high]

                //but to do same in both case we are using it so that we are not bother of it where to use %key part, we are taking key is greater than max value so that 

                //arr[high]%key will give you arr[high].

                high--;

            }

            else 

            {

                arr[i] = (arr[low]%key) *key + arr[i];

                low++;

            }

        }

        for(int i = 0; i < n; i++) arr[i] = arr[i]/key; // val * y / y = val; 

 

    }
