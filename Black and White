//{ Driver Code Starts
#include <bits/stdc++.h>

using namespace std;

long long numOfWays(int n, int m);

int main() {
    // code
    int T;
    cin >> T;
    while (T--) {
        int n, m;
        cin >> n >> m;
        cout << numOfWays(n, m) << endl;
    }
    return 0;
}
// } Driver Code Ends


//Function to find out the number of ways we can place a black and a 
//white Knight on this chessboard such that they cannot attack each other.
bool valid(int i,int j,int n,int m)
{
    if(i >= 0 && i < n && j >= 0 && j < m) return true;
    return false;
}
long long numOfWays(int N, int M)
{
    long long mod = 1e9 + 7;
    long long ans = 0;
    long long total;
    for(int i = 0; i < N; i++)
    {
        for(int j = 0; j < M; j++)
        {
            total = N*M-1;
            if(valid(i-1,j+2,N,M)) total--;
            if(valid(i-1,j-2,N,M)) total--;
            if(valid(i+1,j+2,N,M)) total--;
            if(valid(i+1,j-2,N,M)) total--;
            if(valid(i-2,j+1,N,M)) total--;
            if(valid(i-2,j-1,N,M)) total--;
            if(valid(i+2,j+1,N,M)) total--;
            if(valid(i+2,j-1,N,M)) total--;
            ans += total;
        }
    }
    return ans%mod;
}
